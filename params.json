{
  "name": "Jekyll Cloudinary Liquid tag",
  "tagline": "Liquid tag for Jekyll to use Cloudinary for optimized responsive posts images.",
  "body": "# Jekyll Cloudinary Liquid tag\r\n\r\n[![Gem Version](https://badge.fury.io/rb/jekyll-cloudinary.svg)](https://badge.fury.io/rb/jekyll-cloudinary)\r\n[![Gem Downloads](https://img.shields.io/gem/dt/jekyll-cloudinary.svg?style=flat)](http://rubygems.org/gems/jekyll-cloudinary)\r\n\r\n`jekyll-cloudinary` is a [Jekyll](http://jekyllrb.com/) plugin adding a [Liquid](http://liquidmarkup.org) tag to ease the use of [Cloudinary](http://cloudinary.com/invites/lpov9zyyucivvxsnalc5/sgyyc0j14k6p0sbt51nw) for responsive images in your Markdown/[Kramdown](http://kramdown.gettalong.org/) posts.\r\n\r\nIt builds the HTML for responsive images in the posts, using the `srcset` and `sizes` attributes for the `<img />` tag (see [the \"varying size and density\" section of this post](https://jakearchibald.com/2015/anatomy-of-responsive-images/#varying-size-and-density) if this is new for you, and why it's recommended to [not use `<picture>` most of the time](https://cloudfour.com/thinks/dont-use-picture-most-of-the-time/)). URLs in the `srcset` are cloudinary URLs that [fetch on-the-fly](http://cloudinary.com/features#fetch) the post's images and resize them to several sizes.\r\n\r\nYou are in full control of the number of generated images and their sizes, and the `sizes` attribute that helps the browser decide which image to download. See the complete configuration options for details.\r\n\r\nHere is the general syntax of this Liquid tag:\r\n\r\n```liquid\r\n{% cloudinary [preset] path/to/img.jpg [attr=\"value\"] %}\r\n```\r\n\r\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\r\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\r\n## Table of contents\r\n\r\n- [Installation](#installation)\r\n- [Configuration](#configuration)\r\n  - [Mandatory settings](#mandatory-settings)\r\n  - [Optional global settings](#optional-global-settings)\r\n    - [`verbose` (default: `false`)](#verbose-default-false)\r\n  - [Optional (but highly recommended) presets](#optional-but-highly-recommended-presets)\r\n    - [Default preset](#default-preset)\r\n    - [Additional presets](#additional-presets)\r\n  - [Detailed preset settings](#detailed-preset-settings)\r\n    - [`figure` (default: `auto`)](#figure-default-auto)\r\n    - [`min_size` (default: `320`)](#min_size-default-320)\r\n    - [`max_size` (default: `1200`)](#max_size-default-1200)\r\n    - [`steps` (default: `5`)](#steps-default-5)\r\n    - [`sizes` (default: `\"100vw\"`)](#sizes-default-100vw)\r\n    - [`attributes` (default: none)](#attributes-default-none)\r\n- [Live example](#live-example)\r\n- [To do](#to-do)\r\n- [Do you use the plugin on a live site?](#do-you-use-the-plugin-on-a-live-site)\r\n\r\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\r\n\r\n## Installation\r\n\r\n[Sign up **for free** on Cloudinary!](http://cloudinary.com/invites/lpov9zyyucivvxsnalc5/sgyyc0j14k6p0sbt51nw) The free account should be enough for most blogs.\r\n\r\nAdd `gem 'jekyll-cloudinary'` to your `Gemfile` and run `bundle update` to install the gem.\r\n\r\nAdd `jekyll-cloudinary` to your `_config.yml` like the following:\r\n\r\n```yaml\r\ngems:\r\n  - jekyll-cloudinary\r\n```\r\n\r\n## Configuration\r\n\r\n### Mandatory settings\r\n\r\nAdd `cloudinary` to your `_config.yml` and your Cloudinary \"Cloud name\" (find it in your [Cloudinary dashboard](https://cloudinary.com/console)):\r\n\r\n```yaml\r\ncloudinary:\r\n  cloud_name: <put here your Cloudinary \"Cloud name\">\r\n```\r\n\r\n### Optional global settings\r\n\r\nYou can now define some global settings\r\n\r\n```yaml\r\ncloudinary:\r\n  …\r\n  verbose: true\r\n```\r\n\r\n#### `verbose` (default: `false`)\r\n\r\nWhen set to `true`, this setting will show messages in the console when something goes wrong, such as:\r\n\r\n```\r\n[Cloudinary] Couldn't find this image to check its width: /path/to/jekyll/_site/assets/img.jpg\r\n```\r\n\r\nor\r\n\r\n```\r\n[Cloudinary] Natural width of source image 'img.jpg' (720px) in _posts/2016-06-09-post.md not enough for creating 1600px version\r\n```\r\n\r\n### Optional (but highly recommended) presets\r\n\r\nYou can now define the presets you need for your posts' images, starting with the default one:\r\n\r\n#### Default preset\r\n\r\nThe default preset is the one you don't even have to mention when using the Liquid tag, and that will be used if a preset you use in the tag doesn't exist.\r\n\r\n```yaml\r\ncloudinary:\r\n  …\r\n  presets:\r\n    default:\r\n      min_size: 320\r\n      max_size: 1600\r\n      steps: 5\r\n      sizes: \"(min-width: 50rem) 50rem, 90vw\"\r\n```\r\n\r\nThis preset will generate five images 320 to 1600 pixels wide in the `srcset` and define `sizes` as `\"(min-width: 50rem) 50rem, 90vw\"`.\r\n\r\nWith this preset, you only have to write this in your Markdown post:\r\n\r\n```liquid\r\n{% cloudinary /assets/img.jpg alt=\"beautiful!\" %}\r\n```\r\n\r\nTo get this HTML:\r\n\r\n```html\r\n<img\r\n  src=\"http://res.cloudinary.com/<cloud_name>/image/fetch/c_limit,w_480,q_auto,f_auto/https://<your-domain>/assets/img.jpg\"\r\n  srcset=\"\r\n    http://res.cloudinary.com/<cloud_name>/image/fetch/c_limit,w_320,q_auto,f_auto/https://<your-domain>/assets/img.jpg 320w,\r\n    http://res.cloudinary.com/<cloud_name>/image/fetch/c_limit,w_640,q_auto,f_auto/https://<your-domain>/assets/img.jpg 640w\r\n    http://res.cloudinary.com/<cloud_name>/image/fetch/c_limit,w_960,q_auto,f_auto/https://<your-domain>/assets/img.jpg 960w\r\n    http://res.cloudinary.com/<cloud_name>/image/fetch/c_limit,w_1280,q_auto,f_auto/https://<your-domain>/assets/img.jpg 1280w\r\n    http://res.cloudinary.com/<cloud_name>/image/fetch/c_limit,w_1600,q_auto,f_auto/https://<your-domain>/assets/img.jpg 1600w\r\n    \"\r\n  sizes=\"(min-width: 50rem) 50rem, 90vw\"\r\n  alt=\"beautiful!\"\r\n  width=\"480\"\r\n  height=\"320\"\r\n/>\r\n```\r\n\r\nThere is a true default `default` preset, but you're strongly encouraged to define your own default preset.\r\n\r\n#### Additional presets\r\n\r\nYou can add other presets if you need several image sizes in your posts.\r\n\r\nHere is an example for images that take only one third of the post width:\r\n\r\n```yaml\r\ncloudinary:\r\n  …\r\n  presets:\r\n    …\r\n    onethird:\r\n      min_size: 110\r\n      max_size: 535\r\n      steps: 3\r\n      sizes: \"(min-width: 50rem) 17rem, 30vw\"\r\n      attributes:\r\n        class: \"one3rd\"\r\n```\r\n\r\nTo use this additional preset, you will have to write this in your Markdown post:\r\n\r\n```liquid\r\n{% cloudinary onethird /assets/img.jpg %}\r\n```\r\n\r\nThe generated element will also get a `class=\"one3rd\"` that can be useful for example with this CSS:\r\n\r\n```css\r\n.one3rd {\r\n  max-width: 33%;\r\n  float: right;\r\n  margin: 0 0 1em 1em;\r\n}\r\n```\r\n\r\n### Detailed preset settings\r\n\r\n#### `figure` (default: `auto`)\r\n\r\nThis setting lets you decide what to do when there is a `caption` attribute in the Cloudinary Liquid tag.\r\n\r\nThe value can be:\r\n\r\n- `auto` (default): will generate a `<figure>` and `<figcaption>` only if there's a caption\r\n- `never`: will always generate a `<img>`, losing the caption\r\n- `always`: will always generate a `<figure>` and `<figcaption>`, even if there's no `caption` attribute\r\n\r\nIf a `<figure>` is generated and there are attributes in the Liquid tag, they are added to the `<img>` if they are `alt` or `title`, or to the `<figure>`.\r\n\r\n#### `min_size` (default: `320`)\r\n\r\n#### `max_size` (default: `1200`)\r\n\r\n#### `steps` (default: `5`)\r\n\r\n#### `sizes` (default: `\"100vw\"`)\r\n\r\n#### `attributes` (default: none)\r\n\r\nAttributes are added without transformation to the generated element.\r\n\r\nYou can obviously define the `alt` attribute, mandatory for accessibility, but you can also set a `title`, a `class`, `aria-*` attributes for enhanced accessibility, or even `data-*` attributes you would like to use later with CSS or JavaScript.\r\n\r\nThe `caption` attribute is the only one that can act differently, depending on the `figure` setting.\r\n\r\n`alt`, `title` and `caption` attributes can contain Markdown.\r\n\r\n## Live example\r\n\r\nGo to this post: [https://nicolas-hoizey.com/2016/07/tout-change-rien-ne-change.html](https://nicolas-hoizey.com/2016/07/tout-change-rien-ne-change.html).\r\n\r\nThe source Markdown is here: [https://github.com/nhoizey/nicolas-hoizey.com/blob/master/_posts/2016/07/13-tout-change-rien-ne-change/2016-07-13-tout-change-rien-ne-change.md](https://github.com/nhoizey/nicolas-hoizey.com/blob/master/_posts/2016/07/13-tout-change-rien-ne-change/2016-07-13-tout-change-rien-ne-change.md).\r\n\r\nThe content is in french, yes, but look only at the images if you don't understand.\r\n\r\nYou'll find here:\r\n\r\n- 2 logos floating on the right of the text (or centered on smaller screens): [Jekyll](http://jekyllrb.com/) and [Cloudinary](http://cloudinary.com/invites/lpov9zyyucivvxsnalc5/sgyyc0j14k6p0sbt51nw)\r\n- 2 screenshots taking the whole width of the content: the [Cloudinary pricing table](http://cloudinary.com/pricing), and [Dareboost](https://www.dareboost.com/en/home)'s performance monitoring graph\r\n\r\nThese image types need different settings to deal with different sizes and position:\r\n\r\n- screenshot always use the full content width, if they're wide enough\r\n- logos are centered and take one half of the content width on small screens, and are floated and take one fourth of the content width on larger screens\r\n\r\nThis is how I use the Cloudinary Liquid tag for the Cloudinary logo and prices table screenshot:\r\n\r\n```liquid\r\n{% cloudinary logo /assets/logos/cloudinary.png alt=\"Logo de Cloudinary\" %}\r\n{% cloudinary cloudinary-pricing.png alt=\"Les tarifs de Cloudinary\" caption=\"Les tarifs de Cloudinary, dont l'offre gratuite déjà généreuse\" %}\r\n```\r\n\r\nThe only difference is that I explicitly use the `logo` preset for the logo. The other image uses the `default` preset.\r\n\r\nHere is the necessary configuration for this:\r\n\r\n```yaml\r\ncloudinary:\r\n  cloud_name: …\r\n  verbose: false\r\n  presets:\r\n    default:\r\n      min_width: 320\r\n      max_width: 1600\r\n      steps: 5\r\n      sizes: '(min-width: 50rem) 50rem, 90vw'\r\n      figure: always\r\n    logo:\r\n      min_width: 80\r\n      max_width: 400\r\n      steps: 3\r\n      sizes: '(min-width: 50rem) 13rem, (min-width: 40rem) 25vw, 45vw'\r\n      figure: never\r\n      attributes:\r\n        class: logo\r\n```\r\n\r\nIt generates these HTML fragments (pretty printed here), for the logo:\r\n\r\n```html\r\n<img\r\n  src=\"https://res.cloudinary.com/nho/image/fetch/c_limit,w_480,q_auto,f_auto/https://nicolas-hoizey.com/assets/logos/cloudinary.png\"\r\n  srcset=\"\r\n    https://res.cloudinary.com/nho/image/fetch/c_limit,w_80,q_auto,f_auto/https://nicolas-hoizey.com/assets/logos/cloudinary.png 80w,\r\n    https://res.cloudinary.com/nho/image/fetch/c_limit,w_240,q_auto,f_auto/https://nicolas-hoizey.com/assets/logos/cloudinary.png 240w,\r\n    https://res.cloudinary.com/nho/image/fetch/c_limit,w_400,q_auto,f_auto/https://nicolas-hoizey.com/assets/logos/cloudinary.png 400w\"\r\n  sizes=\"\r\n    (min-width: 50rem) 13rem,\r\n    (min-width: 40rem) 25vw,\r\n    45vw\"\r\n  class=\"logo\"\r\n  alt=\"Logo de Cloudinary\"\r\n  width=\"480\"\r\n  height=\"350\"\r\n/>\r\n```\r\n\r\nAnd for the screenshot:\r\n\r\n```html\r\n<figure>\r\n  <img\r\n    src=\"https://res.cloudinary.com/nho/image/fetch/c_limit,w_1208,q_auto,f_auto/https://nicolas-hoizey.com/2016/07/cloudinary-pricing.png\"\r\n    srcset=\"\r\n      https://res.cloudinary.com/nho/image/fetch/c_limit,w_320,q_auto,f_auto/https://nicolas-hoizey.com/2016/07/cloudinary-pricing.png 320w,\r\n      https://res.cloudinary.com/nho/image/fetch/c_limit,w_640,q_auto,f_auto/https://nicolas-hoizey.com/2016/07/cloudinary-pricing.png 640w,\r\n      https://res.cloudinary.com/nho/image/fetch/c_limit,w_960,q_auto,f_auto/https://nicolas-hoizey.com/2016/07/cloudinary-pricing.png 960w,\r\n      https://res.cloudinary.com/nho/image/fetch/c_limit,w_1208,q_auto,f_auto/https://nicolas-hoizey.com/2016/07/cloudinary-pricing.png 1208w\"\r\n    sizes=\"(min-width: 50rem) 50rem, 90vw\"\r\n    alt=\"Les tarifs de Cloudinary\"\r\n    width=\"1208\"\r\n    height=\"561\"\r\n  />\r\n  <figcaption>Les tarifs de Cloudinary, dont l'offre gratuite déjà généreuse</figcaption>\r\n</figure>\r\n```\r\n\r\nThere are only 4 version in the `srcset` here because 2 of the 5 expected sizes are larger than the source image, and are replaced by one using the native source image width.\r\n\r\nAnd here are the relevant parts of the accompanying CSS (in Sass form):\r\n\r\n```sass\r\narticle {\r\n  figure, img {\r\n    margin: 2em auto;\r\n    display: block;\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n}\r\n\r\n.logo {\r\n  display: block;\r\n  margin: 1em auto;\r\n  max-width: 50%;\r\n  height: auto;\r\n\r\n  @media (min-width: 40em) {\r\n    max-width: 25%;\r\n    float: right;\r\n    margin: 0 0 1em 1em;\r\n  }\r\n}\r\n```\r\n\r\n## To do\r\n\r\nThere are already [a few issues for bugs and things that should be added to the plugin](https://github.com/nhoizey/jekyll-cloudinary/issues), feel free to add your ideas!\r\n\r\n## Do you use the plugin on a live site?\r\n\r\nAdd it to [the \"Sites\" page of the wiki](https://github.com/nhoizey/jekyll-cloudinary/wiki/Sites) and please let me know on Twitter: [@nhoizey](https://twitter.com/nhoizey)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}